apiVersion: apps/v1
kind: Deployment
metadata:
  name: "{{ include "eduvize.fullname" . }}-s3"
  labels:
    {{- include "eduvize.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.replicas.s3 }}
  selector:
    matchLabels:
      app: "{{ include "eduvize.fullname" . }}-s3"
      {{- include "eduvize.labels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: "{{ include "eduvize.fullname" . }}-s3"
        {{- include "eduvize.labels" . | nindent 8 }}
    spec:
      containers:
        - name: "{{ include "eduvize.fullname" . }}"
          image: {{ .Values.image.s3 }}
          ports:
            - name: http
              containerPort: {{ .Values.ports.s3.http }}
            - name: console
              containerPort: {{ .Values.ports.s3.console }}
          env:
            - name: MINIO_DEFAULT_BUCKETS
              value: "{{ .Values.storage.bucketName }}:public"
            - name: MINIO_REGION
              value: {{ .Values.storage.region }}
            {{- range .Values.secretEnvironmentBlock.s3 }}
            - name: {{ .name }}
              valueFrom:
                secretKeyRef:
                  name: {{ .secret }}
                  key: {{ .key }}
            {{- end}}
          volumeMounts:
            - name: "{{ include "eduvize.fullname" . }}-s3-volume"
              mountPath: /data
      volumes:
        - name: "{{ include "eduvize.fullname" . }}-s3-volume"
          persistentVolumeClaim:
            claimName: "{{ include "eduvize.fullname" . }}-s3-pvc"