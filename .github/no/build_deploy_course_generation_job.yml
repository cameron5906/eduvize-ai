name: Build and Deploy Course Generator

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "src/backend/jobs/Dockerfile"
      - "src/backend/jobs/course_generator/**"
      - "kubernetes/eduvize/templates/deployments/course-generation-*.yaml"

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    env: # env should be within the job block, not before
      REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      RELEASE_NAMESPACE: ${{ secrets.RELEASE_NAMESPACE || 'eduvize' }}
      KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Debug Docker Registry Info
        run: |
          echo "Registry Name: $REGISTRY_NAME"
          echo "Registry Username: $REGISTRY_USERNAME"

      - name: Log in to Private Registry
        run: |
          echo "$REGISTRY_PASSWORD" | docker login "$REGISTRY_NAME" -u "$REGISTRY_USERNAME" --password-stdin

      - name: Build and Push Course Generator Image
        run: |
          REGISTRY_PREFIX=${{ secrets.REGISTRY_PREFIX || '' }}
          IMAGE_NAME="${REGISTRY_PREFIX:+${REGISTRY_PREFIX}/}course-generator:latest"
          echo "Building ${REGISTRY_NAME}/$IMAGE_NAME"
          docker build -f src/backend/jobs/Dockerfile -t ${REGISTRY_NAME}/$IMAGE_NAME --build-arg JOB_NAME=course_generator src/backend
          docker push ${REGISTRY_NAME}/$IMAGE_NAME

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Setup kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_DATA" | base64 -d > $HOME/.kube/config
          kubectl config view

      - name: Helm Upgrade
        run: |
          NAMESPACE="${{ secrets.RELEASE_NAMESPACE || 'eduvize' }}"
          helm upgrade --install eduvize kubernetes/eduvize \
            --values kubernetes/eduvize/values.yaml \
            --set ingress.hostname=$DOMAIN_NAME \
            --namespace $NAMESPACE \
            --dry-run \
            --debug
