name: Build and Deploy

on:
  workflow_call:
    inputs:
      image_name:
        type: string
        description: "The name of the image"
        required: true
        default: "app"
      dockerfile:
        type: string
        description: "Path to the Dockerfile"
        required: true
        default: "src/client/Dockerfile"
      build_context:
        type: string
        description: "The build context for Docker"
        required: true
        default: "src/client"
      registry_prefix:
        type: string
        description: "The registry prefix"
        required: false
        default: "eduvize"
      domain_name:
        type: string
        description: "The domain name for ingress"
        required: true
      release_namespace:
        type: string
        description: "The Kubernetes namespace for release"
        required: false
        default: "eduvize"
    secrets:
      registry_name:
        required: true
      registry_username:
        required: true
      registry_password:
        required: true
      kubeconfig_data:
        required: true

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Debug Docker Registry Info
        run: |
          echo "Registry Name: ${{ secrets.registry_name }}"
          echo "Registry Username: ${{ secrets.registry_username }}"

      - name: Log in to Private Registry
        run: |
          echo "${{ secrets.registry_password }}" | docker login "${{ secrets.registry_name }}" -u "${{ secrets.registry_username }}" --password-stdin

      - name: Build and Push Image
        run: |
          IMAGE_REPO="${{ inputs.registry_prefix:+${{ inputs.registry_prefix }}/ }}${{ inputs.image_name }}:latest"
          echo "Building ${{ secrets.registry_name }}/${IMAGE_REPO}"
          docker build -f ${{ inputs.dockerfile }} -t ${{ secrets.registry_name }}/${IMAGE_REPO} ${{ inputs.build_context }}
          docker push ${{ secrets.registry_name }}/${IMAGE_REPO}

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Setup kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "${{ secrets.kubeconfig_data }}" | base64 -d > $HOME/.kube/config
          kubectl config view

      - name: Helm Upgrade
        run: |
          helm upgrade --install eduvize kubernetes/eduvize \
            --values kubernetes/eduvize/values.yaml \
            --set ingress.hostname=${{ inputs.domain_name }} \
            --namespace ${{ inputs.release_namespace }} \
            --debug
