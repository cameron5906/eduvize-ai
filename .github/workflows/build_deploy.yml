name: Build and Deploy

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - "src/backend/**"
      - "src/client/**"
      - "src/playground/**"
      - "src/playground-orchestrator/**"
      - "kubernetes/**"
      - "src/backend/jobs/course_generator/**"

jobs:
  build:
    name: Build and Deploy Services
    runs-on: ubuntu-latest

    env:
      REGISTRY_NAME: ${{ secrets.REGISTRY_NAME }}
      DOMAIN_NAME: ${{ secrets.DOMAIN_NAME }}
      REGISTRY_USERNAME: ${{ secrets.REGISTRY_USERNAME }}
      REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
      KUBECONFIG_DATA: ${{ secrets.KUBECONFIG_DATA }}
      RELEASE_NAMESPACE: ${{ secrets.RELEASE_NAMESPACE || 'eduvize' }} # Default to 'eduvize' if not set
      REGISTRY_PREFIX: ${{ secrets.REGISTRY_PREFIX || '' }} # Default to empty string if not set

    steps:
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Debug Docker Registry Info
        run: |
          echo "Registry Name: $REGISTRY_NAME"
          echo "Registry Username: $REGISTRY_USERNAME"
          echo "Registry Prefix: $REGISTRY_PREFIX"

      - name: Log in to Private Registry
        run: |
          echo "$REGISTRY_PASSWORD" | docker login $REGISTRY_NAME -u "$REGISTRY_USERNAME" --password-stdin

      - name: Determine Changed Directories
        id: changes
        run: |
          git fetch origin main
          git diff --name-only origin/main > changed_files.txt
          cat changed_files.txt

      - name: Log Changed Directories
        run: |
          echo "Changed Directories:"
          if grep -q '^src/backend/' changed_files.txt; then echo "Backend"; fi
          if grep -q '^src/client/' changed_files.txt; then echo "Client"; fi
          if grep -q '^src/playground/' changed_files.txt; then echo "Playground"; fi
          if grep -q '^src/playground-orchestrator/' changed_files.txt; then echo "Playground Orchestrator"; fi
          if grep -q '^src/backend/jobs/course_generator/' changed_files.txt; then echo "Course Generator"; fi

      - name: Build and Push Backend API Image
        if: contains(steps.changes.outputs.api, 'src/backend/')
        run: |
          IMAGE_NAME="${REGISTRY_PREFIX:+${REGISTRY_PREFIX}/}api:latest"
          docker build -f src/backend/api.Dockerfile -t $REGISTRY_NAME/$IMAGE_NAME src/backend
          docker push $REGISTRY_NAME/$IMAGE_NAME

      - name: Build and Push Database Image
        if: contains(steps.changes.outputs.database, 'src/backend/')
        run: |
          IMAGE_NAME="${REGISTRY_PREFIX:+${REGISTRY_PREFIX}/}postgres:latest"
          docker build -f src/backend/database.Dockerfile -t $REGISTRY_NAME/$IMAGE_NAME src/backend
          docker push $REGISTRY_NAME/$IMAGE_NAME

      - name: Build and Push Client Image
        if: contains(steps.changes.outputs.client, 'src/client/')
        run: |
          IMAGE_NAME="${REGISTRY_PREFIX:+${REGISTRY_PREFIX}/}app:latest"
          docker build -f src/client/Dockerfile --build-arg MODE=prod -t $REGISTRY_NAME/$IMAGE_NAME src/client
          docker push $REGISTRY_NAME/$IMAGE_NAME

      - name: Build and Push Playground Image
        if: contains(steps.changes.outputs.playground, 'src/playground/')
        run: |
          IMAGE_NAME="${REGISTRY_PREFIX:+${REGISTRY_PREFIX}/}playground-controller:latest"
          docker build -f src/playground/Dockerfile -t $REGISTRY_NAME/$IMAGE_NAME src/playground
          docker push $REGISTRY_NAME/$IMAGE_NAME

      - name: Build and Push Playground Orchestrator Image
        if: contains(steps.changes.outputs.orchestrator, 'src/playground-orchestrator/')
        run: |
          IMAGE_NAME="${REGISTRY_PREFIX:+${REGISTRY_PREFIX}/}playground-orchestrator:latest"
          docker build -f src/playground-orchestrator/Dockerfile -t $REGISTRY_NAME/$IMAGE_NAME src/playground-orchestrator
          docker push $REGISTRY_NAME/$IMAGE_NAME

      - name: Build and Push Course Generator Job Image
        if: contains(steps.changes.outputs.course_generator, 'src/backend/jobs/course_generator/')
        run: |
          IMAGE_NAME="${REGISTRY_PREFIX:+${REGISTRY_PREFIX}/}course-generator:latest"
          docker build -f src/backend/jobs/Dockerfile --build-arg JOB_NAME=course_generator -t $REGISTRY_NAME/$IMAGE_NAME src/backend
          docker push $REGISTRY_NAME/$IMAGE_NAME

      - name: Install kubectl
        run: |
          curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
          chmod +x kubectl
          sudo mv kubectl /usr/local/bin/kubectl
          kubectl version --client

      - name: Install Helm
        run: |
          curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash
          helm version

      - name: Setup kubectl
        run: |
          mkdir -p $HOME/.kube
          echo "$KUBECONFIG_DATA" | base64 -d > $HOME/.kube/config
          kubectl config view

      - name: Helm Upgrade
        run: |
          NAMESPACE="$RELEASE_NAMESPACE"
          helm upgrade --install eduvize kubernetes/eduvize \
            --values kubernetes/eduvize/values.yaml \
            --set ingress.hostname=$DOMAIN_NAME \
            --namespace $NAMESPACE \
            --dry-run \
            --debug
